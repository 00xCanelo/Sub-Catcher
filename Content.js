!async function(){function m(e){const t=`[${(new Date).toLocaleTimeString()}] `+e;chrome.runtime.sendMessage({type:"log",payload:t}),chrome.storage.local.get({log:[]},e=>{e=[...e.log,t];chrome.storage.local.set({log:e})})}t=(e=window.location.href).match(/securitytrails\.com\/domain\/([^/]+)\/dns/),e=e.match(/securitytrails\.com\/list\/apex_domain\/([^/?#]+)/);var e,t=t&&t[1]||e&&e[1]||null;t?(m("🎯 Auto-detected domain: "+t),async function(t){const o=new Set,a="https://securitytrails.com/list/apex_domain/"+t,r=t=>new Promise(e=>setTimeout(e,t));let n=0;for(let e=1;e<=100;e++){var i=1===e?a:a+"?page="+e,i=(m("⏳ Fetching: "+i),await async function(e,t=3){let o=0;for(;o<t;)try{var a=await fetch(e);if(429!==a.status)return 404===a.status?404:a.ok?await a.text():(m(`❌ HTTP ${a.status} for `+e),null);var n=1e4+15e3*o;m(`⚠️ Got 429. Waiting ${n/1e3}s... (Retry ${o+1})`),await r(n),o++}catch(e){return m("❌ Fetch error: "+e),null}return null}(i));if(404===i){if(n++,m(`⚠️ Page ${e} returned 404 (Consecutive 404s: ${n})`),2<=n){m("🚫 Stopping: Too many 404s. Assuming no more pages.");break}}else if(i){n=0;for(const u of[...(new DOMParser).parseFromString(i,"text/html").querySelectorAll("a.link")]){var s=u.getAttribute("href").match(/\/domain\/([^/]+)\//);s&&o.add(s[1])}m(`✅ Page ${e} done. Total so far: `+o.size),chrome.storage.local.set({count:o.size,wildcard:t}),e<100&&(m("⏱ Waiting 10s before next page..."),await r(1e4))}}m("🎉 Done. Total unique subdomains: "+o.size);const e=[...o].join("\n"),c=new Blob([e],{type:"text/plain"}),l=URL.createObjectURL(c),u=document.createElement("a");u.href=l,u.download=t+"_subdomains_00xCanelo.txt",document.body.appendChild(u),u.click(),document.body.removeChild(u),URL.revokeObjectURL(l)}(t)):m("❌ Not on a valid SecurityTrails DNS or list page.")}();
